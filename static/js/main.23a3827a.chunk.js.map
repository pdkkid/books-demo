{"version":3,"sources":["pages/home.tsx","hooks/debounce.ts","components/book-list.tsx","pages/search.tsx","api/base.ts","pages/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","debouncer","setTimeout","clearTimeout","Meta","Card","BookList","books","size","wrap","align","style","justifyContent","map","book","extra","HeartOutlined","onClick","title","Truncate","lines","volumeInfo","headStyle","textAlign","width","flex","type","hoverable","cover","height","alt","src","imageLinks","smallThumbnail","fontSize","authors","description","id","Option","Select","SearchPage","searchTerm","setSearchTerm","searchValue","setSearchValue","term","data","setData","error","setError","loading","setLoading","a","fetch","res","json","resJson","BookSearch","direction","Item","hasFeedback","validateStatus","undefined","help","message","addonBefore","onChange","e","defaultValue","placeholder","minWidth","target","margin","image","Empty","PRESENTED_IMAGE_SIMPLE","items","ProfilePage","App","Header","Layout","Footer","Content","location","useLocation","minHeight","theme","mode","selectedKeys","pathname","to","marginLeft","marginTop","marginRight","padding","background","exact","path","component","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIeA,EAJE,WACf,OAAO,6C,wFCcMC,MAbf,SAAqBC,EAAeC,GAAgB,IAAD,EACLC,mBAASF,GADJ,mBAC1CG,EAD0C,KAC1BC,EAD0B,KAUjD,OARAC,qBAAU,WACR,IAAMC,EAAYC,YAAW,WAC3BH,EAAkBJ,KACjBC,GACH,OAAO,WACLO,aAAaF,MAEd,CAACN,EAAOC,IACJE,G,2BCRDM,EAASC,IAATD,KAgDOE,EA9CE,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAClB,OACE,cAAC,IAAD,CACEC,KAAM,CAAC,GAAI,IACXC,MAAI,EACJC,MAAM,QACNC,MAAO,CAAEC,eAAgB,gBAJ3B,gBAMGL,QANH,IAMGA,OANH,EAMGA,EAAOM,KAAI,SAAAC,GAAS,IAAD,EAClB,OACE,cAAC,IAAD,CAEEC,MAAO,cAACC,EAAA,EAAD,CAAeC,QAAS,eAC/BC,MAAO,cAACC,EAAA,EAAD,CAAUC,MAAO,EAAjB,SAAqBN,EAAKO,WAAWH,QAC5CI,UAAW,CAAEC,UAAW,UACxBZ,MAAO,CAAEa,MAAO,IAAKC,KAAM,GAC3BC,KAAK,QACLC,WAAS,EACTC,MACE,qBACEC,OAAQ,IACRC,IAAKhB,EAAKO,WAAWH,MACrBa,KACE,UAAAjB,EAAKO,WAAWW,kBAAhB,eAA4BC,iBAC5B,0CAdR,SAmBE,cAAC7B,EAAD,CACEc,MACE,sBAAMP,MAAO,CAAEuB,SAAU,QAAzB,SACGpB,EAAKO,WAAWc,UAGrBC,YACE,cAACjB,EAAA,EAAD,CAAUC,MAAO,EAAjB,SAAqBN,EAAKO,WAAWe,iBAzBpCtB,EAAKuB,UCZdC,EAAWC,IAAXD,OAwDOE,EAtDI,WAAO,IAAD,EACa3C,mBAAS,WADtB,mBAChB4C,EADgB,KACJC,EADI,OAEe7C,mBAAS,IAFxB,mBAEhB8C,EAFgB,KAEHC,EAFG,OCFC,SAACjD,EAAekD,GAAkB,IAAD,EACjChD,qBADiC,mBAClDiD,EADkD,KAC5CC,EAD4C,OAE/BlD,qBAF+B,mBAElDmD,EAFkD,KAE3CC,EAF2C,OAG3BpD,oBAAS,GAHkB,mBAGlDqD,EAHkD,KAGzCC,EAHyC,KAqBzD,OAhBAnD,qBAAU,WACM,KAAVL,GAGJ,sBAAC,8BAAAyD,EAAA,+EAEqBC,MAAM,GAAD,OAbf,8CAae,cAAiB1D,EAAjB,YAA0BkD,EAA1B,mBAF1B,cAESS,EAFT,gBAGyBA,EAAIC,OAH7B,OAGSC,EAHT,OAIGT,EAAQS,GAJX,kDAMGP,EAAS,EAAD,IANX,yBAQGE,GAAW,GARd,4EAAD,KAWC,CAACxD,EAAOkD,IACJ,CAAEK,UAASJ,OAAME,SDbAS,CAFK/D,EAAYiD,EAAa,KAEGF,GAAjDK,EANe,EAMfA,KAAME,EANS,EAMTA,MAUd,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEU,UAAU,aACV/C,MAAO,CAAEa,MAAO,OAAQZ,eAAgB,UAF1C,SAIE,cAAC,IAAD,CAAMD,MAAO,GAAb,SACE,cAAC,IAAKgD,KAAN,CACEC,aAAW,EACXC,eAAgBb,EAAQ,aAAUc,EAClCC,KAAMf,EAAQA,EAAMgB,aAAUF,EAHhC,SAKE,cAAC,IAAD,CACEG,YACE,eAAC,IAAD,CACEC,SAAU,SAAAC,GAlBxBzB,EAkB8CyB,IAChCC,aAAa,UAFf,UAIE,cAAC9B,EAAD,CAAQ3C,MAAM,UAAd,mBACA,cAAC2C,EAAD,CAAQ3C,MAAM,WAAd,oBACA,cAAC2C,EAAD,CAAQ3C,MAAM,UAAd,sBAGJ0E,YAAY,4BACZ7D,KAAK,QACLG,MAAO,CAAE2D,SAAU,OAAQ/C,UAAW,UACtC2C,SAAU,SAAAC,GAjCpBvB,EAiC2CuB,EAjCtBI,OAAO5E,gBAsC1B,cAAC,IAAD,CAASgB,MAAO,CAAE6D,OAAQ,MACxB1B,GAAQ,cAAC,IAAD,CAAO2B,MAAOC,IAAMC,yBAC9B,cAAC,EAAD,CAAUpE,MAAK,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAM8B,YEpDdC,EAJK,WAClB,OAAO,2C,OCuDMC,MAhDf,WAAgB,IACNC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAElBC,EAAWC,cAEjB,OACE,eAAC,IAAD,CAAQzE,MAAO,CAAE0E,UAAW,SAA5B,UACE,cAACN,EAAD,UACE,eAAC,IAAD,CACEO,MAAM,OACNC,KAAK,aACLC,aAAc,CAACL,EAASM,UACxB9E,MAAO,CAAEkB,OAAQ,QAJnB,UAME,eAAC,IAAK8B,KAAN,WACE,wCACA,cAAC,IAAD,CAAM+B,GAAG,QAFI,KAIf,eAAC,IAAK/B,KAAN,WACE,0CACA,cAAC,IAAD,CAAM+B,GAAG,cAFI,WAIf,eAAC,IAAK/B,KAAN,CAA0BhD,MAAO,CAAEgF,WAAY,QAA/C,UACE,4CACA,cAAC,IAAD,CAAMD,GAAG,eAFI,iBAMnB,eAACR,EAAD,CACEvE,MAAO,CACLiF,UAAW,OACXD,WAAY,OACZE,YAAa,OACbC,QAAS,GACTC,WAAY,QANhB,UASE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzG,IACjC,cAAC,IAAD,CAAOwG,KAAK,UAAUC,UAAW1D,IACjC,cAAC,IAAD,CAAOyD,KAAK,WAAWC,UAAWrB,OAEpC,cAACI,EAAD,CAAQtE,MAAO,CAAEY,UAAW,UAA5B,SACE,mBAAG4E,KAAK,4BAAR,yCCpCOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.23a3827a.chunk.js","sourcesContent":["const HomePage = () => {\n  return <div>Home Page</div>;\n};\n\nexport default HomePage;\n","import { useState, useEffect } from \"react\";\n\nfunction useDebounce(value: string, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const debouncer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(debouncer);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { IBook } from \"../api/base.types\";\nimport { Card, Space } from \"antd\";\nimport { HeartOutlined } from \"@ant-design/icons\";\nimport Truncate from \"react-truncate\";\nconst { Meta } = Card;\n\nconst BookList = ({ books }: { books: IBook[] | undefined }) => {\n  return (\n    <Space\n      size={[12, 16]}\n      wrap\n      align=\"start\"\n      style={{ justifyContent: \"space-evenly\" }}\n    >\n      {books?.map(book => {\n        return (\n          <Card\n            key={book.id}\n            extra={<HeartOutlined onClick={() => {}} />}\n            title={<Truncate lines={2}>{book.volumeInfo.title}</Truncate>}\n            headStyle={{ textAlign: \"center\" }}\n            style={{ width: 225, flex: 1 }}\n            type=\"inner\"\n            hoverable\n            cover={\n              <img\n                height={300}\n                alt={book.volumeInfo.title}\n                src={\n                  book.volumeInfo.imageLinks?.smallThumbnail ||\n                  \"https://i.ibb.co/LxkmGDX/download.png\"\n                }\n              />\n            }\n          >\n            <Meta\n              title={\n                <span style={{ fontSize: \"12px\" }}>\n                  {book.volumeInfo.authors}\n                </span>\n              }\n              description={\n                <Truncate lines={4}>{book.volumeInfo.description}</Truncate>\n              }\n            />\n          </Card>\n        );\n      })}\n    </Space>\n  );\n};\n\nexport default BookList;\n","import { Divider, Input, Space, Form, Empty, Select } from \"antd\";\nimport { ChangeEvent, Fragment, useState } from \"react\";\nimport { BookSearch } from \"../api/base\";\nimport useDebounce from \"../hooks/debounce\";\nimport BookList from \"../components/book-list\";\nconst { Option } = Select;\n\nconst SearchPage = () => {\n  const [searchTerm, setSearchTerm] = useState(\"intitle\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const debouncedSearchValue = useDebounce(searchValue, 500);\n\n  const { data, error } = BookSearch(debouncedSearchValue, searchTerm);\n\n  const handleValueChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleTermChange = (event: string) => {\n    setSearchTerm(event);\n  };\n\n  return (\n    <Fragment>\n      <Space\n        direction=\"horizontal\"\n        style={{ width: \"100%\", justifyContent: \"center\" }}\n      >\n        <Form style={{}}>\n          <Form.Item\n            hasFeedback\n            validateStatus={error ? \"error\" : undefined}\n            help={error ? error.message : undefined}\n          >\n            <Input\n              addonBefore={\n                <Select\n                  onChange={e => handleTermChange(e)}\n                  defaultValue=\"intitle\"\n                >\n                  <Option value=\"intitle\">Title</Option>\n                  <Option value=\"inauthor\">Author</Option>\n                  <Option value=\"subject\">Genre</Option>\n                </Select>\n              }\n              placeholder=\"start typing to search...\"\n              size=\"large\"\n              style={{ minWidth: \"50vw\", textAlign: \"center\" }}\n              onChange={e => handleValueChange(e)}\n            />\n          </Form.Item>\n        </Form>\n      </Space>\n      <Divider style={{ margin: 0 }} />\n      {!data && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n      <BookList books={data?.items} />\n    </Fragment>\n  );\n};\n\nexport default SearchPage;\n","import { useState, useEffect } from \"react\";\nimport { IError, ISearchResults } from \"./base.types\";\n\nconst apiBase = \"https://www.googleapis.com/books/v1/volumes\";\n\nexport const BookSearch = (value: string, term: string) => {\n  const [data, setData] = useState<ISearchResults>();\n  const [error, setError] = useState<IError>();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (value === \"\") {\n      return;\n    }\n    (async () => {\n      try {\n        const res = await fetch(`${apiBase}?q=${value}+${term}&maxResults=40`);\n        const resJson = await res.json();\n        setData(resJson);\n      } catch (err) {\n        setError(err as IError);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [value, term]);\n  return { loading, data, error };\n};\n","const ProfilePage = () => {\n  return <div>Profile</div>;\n};\n\nexport default ProfilePage;\n","import React from \"react\";\nimport { Link, Route, useLocation } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport HomePage from \"./pages/home\";\nimport SearchPage from \"./pages/search\";\nimport ProfilePage from \"./pages/profile\";\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  const { Header, Footer, Content } = Layout;\n\n  const location = useLocation();\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header>\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          selectedKeys={[location.pathname]}\n          style={{ height: \"100%\" }}\n        >\n          <Menu.Item key=\"/\">\n            <span>Home</span>\n            <Link to=\"/\" />\n          </Menu.Item>\n          <Menu.Item key=\"/search\">\n            <span>Search</span>\n            <Link to=\"/search\" />\n          </Menu.Item>\n          <Menu.Item key=\"/profile\" style={{ marginLeft: \"auto\" }}>\n            <span>My Books</span>\n            <Link to=\"/profile\" />\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content\n        style={{\n          marginTop: \"24px\",\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          padding: 24,\n          background: \"#fff\",\n        }}\n      >\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/search\" component={SearchPage} />\n        <Route path=\"/profile\" component={ProfilePage} />\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        <a href=\"https://github.com/pdkkid\">Austin Terry ©2021</a>\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}